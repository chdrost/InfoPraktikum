/*
 * Aktualitaet.cpp
 *
 *  Created on: 25.04.2014
 *      Author: christoph
 */

#include "Aktualitaet.h"

Aktualitaet::Aktualitaet() {
	this(0,0,0,0,0,0,0);
}


Aktualitaet::Aktualitaet(int tag, int monat, int jahr, int stunde, int minute,
		int sekunde) {
	zeit = new tm;
	zeit->tm_sec = sekunde;
	zeit->tm_min = minute;
	zeit->tm_hour = stunde;
	zeit->tm_mday = tag;
	zeit->tm_mon = monat;
	zeit->tm_year = jahr;
}

Aktualitaet::Aktualitaet(std::string zeit) {

}


Aktualitaet::~Aktualitaet() {
	delete zeit;
}

int Aktualitaet::checkSekunde(int sekunde) {
	if (sekunde < 0 || sekunde > 59) {
		return 1;
	} else {
		return 0;
	}
}

int Aktualitaet::checkMinute(int minute) {
	checkSekunde(minute);
}

int Aktualitaet::checkStunde(int stunde) {
	if (stunde < 0 || stunde > 23) {
		return 1;
	} else {
		return 0;
	}
}

int Aktualitaet::checkTag(int tag) {
	if (tag < 0 || tag > 31) {
		return 1;
	} else {
		return 0;
	}
}

int Aktualitaet::checkMonat(int monat) {
	if (monat < 0 || monat > 12) {
		return 1;
	} else {
		return 0;
	}
}

int Aktualitaet::checkJahr(int jahr) {
	// Wird nicht benoetigt
	return 0;
}

void Aktualitaet::datumEinlesen(int* sekunde, int* minute, int* stunde,
		int* tag, int* monat, int* jahr, string datum) {
	int* werte;
	string substring = "";
	while(!datum.end()){
		if(datum.iterator != "."){
			substring = datum.iterator + ++datum.iterator;
			werte++ = istringstream ( substring ) >> *werte;
		}
	}
	*sekunde = *werte;
	*minute = *(werte+1);
}

void Aktualitaet::ckeckDatum(int tag, int monat, int jahr, int stunde,
		int minute, int sekunde) throw (ZeitException) {
	string fehler = "";
	int fehlerAnzahl = 0;
	if (checkSekunde(sekunde)) {
		fehler +=
				"Die Sekunden muessen 0>= sekunde <60 sein! Eingelesen wurde: "
						+ sekunde + "\n";
		fehlerAnzahl++;
	}
	if (checkMinute(minute)) {
		fehler += "Die Minuten muessen 0>= sekunde <60 sein! Eingelesen wurde: "
				+ minute + "\n";
	}
	if (checkStunde(stunde)) {
		fehler += "Die Stunden muessen 0>= sekunde <24 sein! Eingelesen wurde: "
				+ stunde + "\n";
	}
	if (checkTag(tag)) {
		fehler += "Die Tage muessen 0>= sekunde <32 sein! Eingelesen wurde: "
				+ tag + "\n";
	}
	if (checkMonat(monat)) {
		fehler += "Die Monate muessen 0>= sekunde <13 sein! Eingelesen wurde: "
				+ monat + "\n";
	}
	if (checkJahr(jahr)) {
		fehler += "Unbekannter Fehler im Jahr!\n+ Eingelesen wurde: " + jahr
				+ "\n";
	}

	//Falls ein Fehler aufgetreten ist, dann Exception mit der entsprechenden Meldung.
	if (fehlerAnzahl) {
		throw new ZeitException(fehler);
	}
}
