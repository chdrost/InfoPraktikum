/*
 * Linearlokation.h
 *
 *  Created on: 25.04.2014
 *      Author: christoph
 */

#ifndef LINEARLOKATION_H_
#define LINEARLOKATION_H_

#include "Gebietslokation.h"

class Linearlokation: public Gebietslokation {
public:
	Linearlokation(vector<string> *zeile, Gebietslokation *areaReference);
	virtual ~Linearlokation();
private:
	/**
	 * Die Stra&szlig;ennummer. Sie besteht aus dem Bezeichner der Stra&szlig;e
	 * und der Nummer der Stra&szlig;e. <br>
	 * Bsp.: A620
	 */
	string roadNumer;

	/**
	 * Der Stra&szlig;enname.<br>
	 * Beispiel: B405 (Stra&szlig;ennummer), Metzer Stra&szlig;e (Stra&szlig;enname).
	 */
	string roadName;

	/**
	 * Ein zus&auml;tzlicher Name der Lokation.<br>
	 * Lt. Doku des Bundesamtes "Zweiter Name".
	 */
	string secondName;

	/**
	 * Area Verweis auf das Gebiet, in dem die Lokation liegt.<br>
	 * Dieses Attribut enth&auml;lt einen Pointer auf ein @link Gebietslokation @endlink
	 * Objekt.
	 */
	Gebietslokation *areaReference;

	/**
	 * Verweis auf die Vorg&auml;ngerlokation bezogen auf die Erfassungsrichtung.
	 * <br>Dieses Attribut enth&auml;lt einen Pointer auf die vorherige
	 * Lokation.
	 */
	Linearlokation *negativeOffset;

	/**
	 * Verweis auf die Nachfolgerlokation bezogen auf die Erfassungsrichtung.
	 * <br>Dieses Attribut enth&auml;lt einen Pointer auf die folgende
	 * Lokation.
	 */
	Linearlokation *positiveOffset;

	/**
	 * Flag, ob Verkehr st&auml;dtischen Characters vorliegt.<br>
	 * (1=ja, 0=nein)
	 */
	bool urban;

	/**
	 * Verweis auf die Loction, einer anderen Stra&szlig;e an gleicher Stelle.
	 * (zirkul&auml;re Verkettung)<br>
	 * Dieses Attribut enth&auml;lt einen Pointer auf die mit der Id verkn&uuml;pften
	 * Linearlokation.
	 */
	Linearlokation *intersectioncode;

	/**
	 * Verweis auf die n&auml;chste Lokation nach der Unterbrechung im
	 * Stra&szlig;enverlauf.<br>
	 * Dieses Attribut enth&auml;lt einen Pointer auf die mit der Id verkn&uuml;pften
	 * Linearlokation.
	 */
	Linearlokation *interruptsRoad;

	/**
	 *Flag, ob Lokation in Erfassungsrichtung zug&auml;nglich ist.<br>
	 *(1=ja, 0=nein)
	 */
	bool inPositive;

	/**
	 * Flag, ob Lokation in Erfassungsrichtung verlassen werden kann.<br>
	 * (1=ja, 0=nein)
	 */
	bool outPositive;

	/**
	 *Flag, ob Lokation entgegen Erfassungsrichtung zug&auml;nglich ist.<br>
	 *(1=ja, 0=nein)
	 */
	bool inNegative;

	/**
	 * Flag, ob Lokation in Erfassungsrichtung verlassen werden kann.<br>
	 * (1=ja, 0=nein)
	 */
	bool outPositive;

};

#endif /* LINEARLOKATION_H_ */
