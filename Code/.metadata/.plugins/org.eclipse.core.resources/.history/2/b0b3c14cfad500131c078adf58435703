/*
 * SuchenKlasse.h
 *
 *  Created on: 07.05.2014
 *      Author: christoph
 */

#ifndef SUCHENKLASSE_H_
#define SUCHENKLASSE_H_

#include "../geopunkte/LokationsVerwaltung.h";

/**
 * Diese Klasse ist ein Container f&uuml;r alle m&ouml;glichen
 * Suchen, die man auf die Lokationsobjekte ansetzen kann.<br>
 */
class SuchenKlasse {
public:
	SuchenKlasse(LokationsVerwaltung &lokV);
	virtual ~SuchenKlasse();

	vector<Gebietslokation*> suchId(int id);
	vector<Gebietslokation*> suchTypBuchstabe(char buchstabe);
	vector<Gebietslokation*> suchTypZahl(int zahl);
	vector<Gebietslokation*> suchFeinTyp(int feinTyp);
	vector<Gebietslokation*> suchFirstName(string firstName);
	vector<Gebietslokation*> suchAdminBundesland(string adminBundesLand);
	vector<Gebietslokation*> suchAktualitaet(Aktualitaet &aktualitaet);
	vector<Gebietslokation*> suchRoadNumber(string roadNumber);
	vector<Gebietslokation*> suchRoadName(string RoadName);
	vector<Gebietslokation*> suchSecondName(string secondName);
	vector<Gebietslokation*> suchAreaReference(Gebietslokation &areaReference);
	vector<Gebietslokation*> suchPositiveOffset(Linearlokation &positiveOffset);
	vector<Gebietslokation*> suchNegativeOffset(Linearlokation &negativeOffset);
	vector<Gebietslokation*> suchUrban(bool urban);
	vector<Gebietslokation*> suchIntersectionCode(Linearlokation &intersectionCode);
	vector<Gebietslokation*> suchInterruptsRoad(Linearlokation &interruptsroad);
	//TODO evtl. Suchfkt. fuer Flags schreiben
	vector<Gebietslokation*> suchTern(bool tern);
private:
	/**
	 * Ein Pointer auf ein Lokalit&auml;tsverwaltungsobjekt.<b>
	 * Dort sind die Datens&auml;tze enthalten, die durchsucht werden
	 * sollen.
	 */
	LokationsVerwaltung *lokalitaetsVerwaltung;
};

#endif /* SUCHENKLASSE_H_ */
